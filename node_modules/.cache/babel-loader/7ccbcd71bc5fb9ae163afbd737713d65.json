{"ast":null,"code":"var _jsxFileName = \"G:\\\\curso_Luis\\\\luis\\\\PI\\\\Nueva carpeta\\\\PI-Countries-main\\\\client\\\\src\\\\components\\\\Home.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getCountries } from \"../actions\";\nimport Card from \"./Card\";\nimport { Link } from \"react-router-dom\";\nimport Paginado from \"./Paginado\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Home() {\n  _s();\n  const dispatch = useDispatch();\n  const allCountries = useSelector(state => state.countries);\n  //{ estados globales \n  const [currentPage, setCurrentPage] = useState(1); //estado con la p치gina actual y un estado que\n  // setea la p치gina (1) es por que la pagina inicial es 1 \n\n  const [countriesPage, setCountriesPage] = useState(10); // va a setear las country por pagina 10xpagina\n\n  //}fin de estados \n  const lastCountri = currentPage * countriesPage;\n  const firstCountri = lastCountri - countriesPage;\n  const currentCountries = allCountries.slice(firstCountri, lastCountri); //va a contener las countri de la pagina actual \n\n  const paginado = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  useEffect(() => {\n    dispatch(getCountries());\n  }, [dispatch]);\n  function handleClick(e) {\n    e.preventDefault();\n    dispatch(getCountries());\n  }\n  {/* <Paginado\r\n   countriesPage={countriesPage}\r\n   allCountries = {allCountries.length}\r\n   paginado = {paginado}\r\n   /> */}\n\n  // return (\n  //     <div>\n  //         <Link to= \"/countries\">crear actividad</Link>\n  //         <h1>TITULO DE LA PAGINA</h1>\n  //         <button onClick={e=>{handleClick(e)}}>volver a cargar todas las countries</button>\n  //         <div>\n  //             <select>\n  //                 <option value=\"asc\">Ascendente</option>\n  //                 <option value=\"desc\">Descendente</option>\n  //             </select>\n\n  //             {\n  //              currentCountries.map( el=> {\n  //                     return(\n  //                     <Card name= {el.name} image= {el.image} continent={el.continent}/>)\n  //                 })\n  //             }\n\n  //         </div>\n  //     </div>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/countries\",\n      children: \"crear actividad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TITULO DE LA PAGINA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: e => {\n        handleClick(e);\n      },\n      children: \"volver a cargar todas las countries\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"asc\",\n          children: \"Ascendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"desc\",\n          children: \"Descendente\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Paginado, {\n        countriesPage: countriesPage,\n        allCountries: allCountries.length,\n        paginado: paginado\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), currentCountries.map(el => {\n        return /*#__PURE__*/_jsxDEV(Card, {\n          name: el.name,\n          image: el.image,\n          continent: el.continent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 25\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 9\n  }, this);\n}\n_s(Home, \"TWBoyE8Tj2SrmMNTbAmxY8QEm9Y=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","getCountries","Card","Link","Paginado","Home","dispatch","allCountries","state","countries","currentPage","setCurrentPage","countriesPage","setCountriesPage","lastCountri","firstCountri","currentCountries","slice","paginado","pageNumber","handleClick","e","preventDefault","length","map","el","name","image","continent"],"sources":["G:/curso_Luis/luis/PI/Nueva carpeta/PI-Countries-main/client/src/components/Home.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {useState, useEffect} from \"react\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport { getCountries } from \"../actions\";\r\nimport Card from \"./Card\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Paginado from \"./Paginado\";\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Home(){\r\n    const dispatch = useDispatch()\r\n    const allCountries = useSelector((state) => state.countries)\r\n    //{ estados globales \r\n    const [currentPage,setCurrentPage] = useState(1) //estado con la p치gina actual y un estado que\r\n    // setea la p치gina (1) es por que la pagina inicial es 1 \r\n    \r\n    const [countriesPage, setCountriesPage] = useState(10) // va a setear las country por pagina 10xpagina\r\n \r\n    //}fin de estados \r\n    const lastCountri = currentPage * countriesPage \r\n    const firstCountri = lastCountri - countriesPage\r\n    const currentCountries = allCountries.slice(firstCountri,lastCountri) //va a contener las countri de la pagina actual \r\n\r\n    const paginado = (pageNumber)=>{\r\n        setCurrentPage(pageNumber)\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    useEffect(()=>{\r\n        dispatch(getCountries());\r\n    },[dispatch])\r\n\r\nfunction handleClick(e){\r\n    e.preventDefault();\r\n    dispatch(getCountries());\r\n}\r\n\r\n{/* <Paginado\r\ncountriesPage={countriesPage}\r\nallCountries = {allCountries.length}\r\npaginado = {paginado}\r\n/> */}\r\n\r\n\r\n\r\n\r\n    // return (\r\n    //     <div>\r\n    //         <Link to= \"/countries\">crear actividad</Link>\r\n    //         <h1>TITULO DE LA PAGINA</h1>\r\n    //         <button onClick={e=>{handleClick(e)}}>volver a cargar todas las countries</button>\r\n    //         <div>\r\n    //             <select>\r\n    //                 <option value=\"asc\">Ascendente</option>\r\n    //                 <option value=\"desc\">Descendente</option>\r\n    //             </select>\r\n\r\n    //             {\r\n    //              currentCountries.map( el=> {\r\n    //                     return(\r\n    //                     <Card name= {el.name} image= {el.image} continent={el.continent}/>)\r\n    //                 })\r\n    //             }\r\n\r\n    //         </div>\r\n    //     </div>\r\n    // )\r\n\r\n\r\n\r\n return (\r\n        <div>\r\n            <Link to= \"/countries\">crear actividad</Link>\r\n            <h1>TITULO DE LA PAGINA</h1>\r\n            <button onClick={e=>{handleClick(e)}}>volver a cargar todas las countries</button>\r\n            <div>\r\n                <select>\r\n                    <option value=\"asc\">Ascendente</option>\r\n                    <option value=\"desc\">Descendente</option>\r\n                </select>\r\n                <Paginado\r\ncountriesPage={countriesPage}\r\nallCountries = {allCountries.length}\r\npaginado = {paginado}\r\n/>\r\n                {\r\n                 currentCountries.map( el=> {\r\n                        return(\r\n                        <Card name= {el.name} image= {el.image} continent={el.continent}/>)\r\n                    })\r\n                }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n\r\n\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,EAAEC,SAAS,QAAO,OAAO;AACzC,SAAQC,WAAW,EAAEC,WAAW,QAAO,aAAa;AACpD,SAASC,YAAY,QAAQ,YAAY;AACzC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,QAAQ,MAAM,YAAY;AAAC;AAOlC,eAAe,SAASC,IAAI,GAAE;EAAA;EAC1B,MAAMC,QAAQ,GAAGP,WAAW,EAAE;EAC9B,MAAMQ,YAAY,GAAGP,WAAW,CAAEQ,KAAK,IAAKA,KAAK,CAACC,SAAS,CAAC;EAC5D;EACA,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,EAAC;EACjD;;EAEA,MAAM,CAACe,aAAa,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,EAAC;;EAEvD;EACA,MAAMiB,WAAW,GAAGJ,WAAW,GAAGE,aAAa;EAC/C,MAAMG,YAAY,GAAGD,WAAW,GAAGF,aAAa;EAChD,MAAMI,gBAAgB,GAAGT,YAAY,CAACU,KAAK,CAACF,YAAY,EAACD,WAAW,CAAC,EAAC;;EAEtE,MAAMI,QAAQ,GAAIC,UAAU,IAAG;IAC3BR,cAAc,CAACQ,UAAU,CAAC;EAC9B,CAAC;EAMDrB,SAAS,CAAC,MAAI;IACVQ,QAAQ,CAACL,YAAY,EAAE,CAAC;EAC5B,CAAC,EAAC,CAACK,QAAQ,CAAC,CAAC;EAEjB,SAASc,WAAW,CAACC,CAAC,EAAC;IACnBA,CAAC,CAACC,cAAc,EAAE;IAClBhB,QAAQ,CAACL,YAAY,EAAE,CAAC;EAC5B;EAEA,CAAC;AACD;AACA;AACA;AACA,QAJC;;EASG;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;;EAIH,oBACO;IAAA,wBACI,QAAC,IAAI;MAAC,EAAE,EAAE,YAAY;MAAA,UAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAO,eAC7C;MAAA,UAAI;IAAmB;MAAA;MAAA;MAAA;IAAA,QAAK,eAC5B;MAAQ,OAAO,EAAEoB,CAAC,IAAE;QAACD,WAAW,CAACC,CAAC,CAAC;MAAA,CAAE;MAAA,UAAC;IAAmC;MAAA;MAAA;MAAA;IAAA,QAAS,eAClF;MAAA,wBACI;QAAA,wBACI;UAAQ,KAAK,EAAC,KAAK;UAAA,UAAC;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS,eACvC;UAAQ,KAAK,EAAC,MAAM;UAAA,UAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA,QACpC,eACT,QAAC,QAAQ;QACzB,aAAa,EAAET,aAAc;QAC7B,YAAY,EAAIL,YAAY,CAACgB,MAAO;QACpC,QAAQ,EAAIL;MAAS;QAAA;QAAA;QAAA;MAAA,QACnB,EAEeF,gBAAgB,CAACQ,GAAG,CAAEC,EAAE,IAAG;QACpB,oBACA,QAAC,IAAI;UAAC,IAAI,EAAGA,EAAE,CAACC,IAAK;UAAC,KAAK,EAAGD,EAAE,CAACE,KAAM;UAAC,SAAS,EAAEF,EAAE,CAACG;QAAU;UAAA;UAAA;UAAA;QAAA,QAAE;MACtE,CAAC,CAAC;IAAA;MAAA;MAAA;MAAA;IAAA,QAGJ;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAKd;AAAC,GA5FuBvB,IAAI;EAAA,QACPN,WAAW,EACPC,WAAW;AAAA;AAAA,KAFZK,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module"}